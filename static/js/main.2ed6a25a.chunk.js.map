{"version":3,"sources":["theme/MuiTheme.js","components/Navbar.js","components/PredictionBox.js","components/SceneImage.js","components/Gallery.js","components/imagesData.js","DemoSection.js","components/Footer.js","components/Hero.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","logo","maxWidth","button","margin","Navigator","classes","className","AppBar","position","color","Container","fixed","Toolbar","IconButton","edge","aria-label","src","process","alt","Typography","variant","Button","href","target","startIcon","marginTop","marginBottom","backgroundColor","height","text","disabled","scene","confidence","spinner","show","display","hidden","PredictionBox","props","Card","CardContent","onLoading","Box","fontFamily","fontSize","result","prediction","active","wrapper","cursor","selected","borderWidth","borderStyle","borderColor","SceneImage","Fragment","Paper","image","square","onClick","handleClick","id","imageWrapper","imagePaper","Gallery","sceneImages","images","map","Grid","item","xs","container","alignItems","justify","createImagesArray","numberOfImages","totalImages","randomNumbers","length","number","Math","floor","random","indexOf","push","generateRandomNumbers","idx","Demo","imagesData","state","currentImage","modelUrl","targets","handleImageClick","bind","handleRefresh","handlePredictionClick","updatedImages","this","setState","prevState","inputImage","context","document","createElement","getContext","drawImage","getImageData","width","a","tf","model","getElementById","imageData","readImage","imageTensor","fromPixels","toFloat","div","sub","expandDims","predict","maxIdx","argMax","dataSync","probabilities","data","then","max","toFixed","align","divider","direction","sm","subtitle","gallery","predictButton","fullWidth","React","Component","withStyles","paddingTop","paddingBottom","gridGap","fontWeight","textTransform","border","marginLeft","overlay","socialButton","copyright","Footer","currentYear","Date","getFullYear","component","Link","window","open","heroSvg","tagline","subHeading","tryButton","float","paddingLeft","paddingRight","Hero","lg","Hidden","only","Fade","in","timeout","disableStrictModeCompat","Grow","App","StrictMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.2ed6a25a.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: \"#4eaa90\",\n      main: \"#137a63\",\n      dark: \"#004d39\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: \"#d4ffff\",\n      main: \"#a1f4de\",\n      dark: \"#6fc1ac\",\n      contrastText: \"#000000\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst logo = process.env.PUBLIC_URL + \"/logo96.png\";\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    logo: {\n      maxWidth: 40,\n      marginRight: \"10px\",\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  })\n);\n\nexport default function Navigator() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Container fixed>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            ></IconButton>\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n            <Typography variant=\"h6\" className={classes.title}></Typography>\n\n            <Button\n              variant=\"text\"\n              color=\"default\"\n              href=\"https://github.com/luangtatipsy/intel-image-classification\"\n              target=\"_blank\"\n              className={classes.button}\n              startIcon={<GitHubIcon />}\n            >\n              github\n            </Button>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Card, CardContent } from \"@material-ui/core\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    backgroundColor: \"#E0E0E0\",\n    height: 109,\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    color: theme.palette.text.disabled,\n  },\n  scene: {\n    color: theme.palette.primary.main,\n  },\n  confidence: {\n    color: theme.palette.primary.main,\n  },\n  spinner: {\n    marginTop: theme.spacing(3),\n  },\n  show: {\n    display: \"block\",\n  },\n  hidden: {\n    display: \"None\",\n  },\n}));\n\nexport default function PredictionBox(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent className={props.onLoading ? classes.hidden : classes.show}>\n        <Box className={classes.title} fontFamily=\"Monospace\">\n          #result\n        </Box>\n        <Box fontFamily=\"Monospace\" fontSize={16}>\n          \"prediction\":&nbsp;\n          <span className={classes.scene}>\n            {props.result.prediction === null\n              ? \"null\"\n              : props.result.prediction}\n          </span>\n        </Box>\n        <Box fontFamily=\"Monospace\" fontSize={16}>\n          \"confidence\":&nbsp;\n          <span className={classes.confidence}>\n            {props.result.confidence === null\n              ? \"null\"\n              : props.result.confidence}\n          </span>\n        </Box>\n      </CardContent>\n      <CardContent className={props.onLoading ? classes.show : classes.hidden}>\n        <LoadingOverlay\n          active={true}\n          spinner={<BeatLoader color=\"#137a63\" />}\n          className={classes.spinner}\n        ></LoadingOverlay>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Image from \"material-ui-image\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  selected: {\n    borderWidth: 8,\n    borderStyle: \"solid\",\n    borderColor: theme.palette.primary.main,\n  },\n}));\n\nexport default function SceneImage(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Paper\n        className={`${classes.wrapper} ${\n          props.image.selected ? classes.selected : \"\"\n        }`}\n        variant=\"elevation\"\n        square\n        selected={props.image.selected}\n        onClick={() => props.handleClick(props.image.id)}\n      >\n        <Image src={props.image.src} />\n      </Paper>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SceneImage from \"./SceneImage\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  imageWrapper: {\n    margin: theme.spacing(1),\n  },\n  imagePaper: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n}));\n\nexport default function Gallery(props) {\n  const classes = useStyles();\n  const sceneImages = props.images.map((image) => (\n    <Grid key={image.id} className={classes.imageWrapper} item xs={3}>\n      <SceneImage\n        key={image.id}\n        image={image}\n        handleClick={props.handleClick}\n      />\n    </Grid>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <Grid container xs={12} item alignItems=\"center\" justify=\"center\">\n        {sceneImages}\n      </Grid>\n    </div>\n  );\n}\n","const imagesDir = process.env.PUBLIC_URL + \"/images/\";\nconst numberOfImages = 9;\nconst totalImages = 7301;\n\nfunction generateRandomNumbers(numberOfImages, totalImages) {\n  var randomNumbers = [];\n  while (randomNumbers.length < numberOfImages) {\n    let number = Math.floor(Math.random() * totalImages) + 1;\n    if (randomNumbers.indexOf(number) === -1) randomNumbers.push(number);\n  }\n\n  return randomNumbers;\n}\n\nexport default function createImagesArray() {\n  const randomNumbers = generateRandomNumbers(numberOfImages, totalImages);\n  const imagesData = randomNumbers.map((number, idx) => {\n    return {\n      id: idx + 1,\n      src: `${imagesDir}sample_${number}.jpg`,\n    };\n  });\n\n  return imagesData;\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport PredictionBox from \"./components/PredictionBox\";\nimport Gallery from \"./components/Gallery\";\nimport createImagesArray from \"./components/imagesData\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nconst useStyles = (theme) => ({\n  root: {\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n  },\n  container: {\n    gridGap: theme.spacing(1),\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    color: theme.palette.primary.dark,\n  },\n  divider: {\n    marginBottom: theme.spacing(5),\n    border: `7px solid ${theme.palette.primary.light}`,\n    width: \"20%\",\n  },\n  subtitle: {\n    marginLeft: theme.spacing(2),\n    fontWeight: \"bold\",\n    color: theme.palette.primary.dark,\n  },\n  inputImage: {\n    width: 150,\n    height: 150,\n    display: \"none\",\n  },\n  predictButton: {\n    fontWeight: \"bold\",\n    marginTop: theme.spacing(1),\n    color: theme.palette.primary.contrastText,\n  },\n  overlay: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    backgroundColor: \"#E0E0E0\",\n    height: 115,\n  },\n});\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.imagesData = createImagesArray();\n    this.state = {\n      images: this.imagesData.map((image) => {\n        return {\n          ...image,\n          selected: false,\n        };\n      }),\n      currentImage: null,\n      result: {\n        prediction: null,\n        confidence: null,\n      },\n      onLoading: false,\n    };\n\n    this.modelUrl =\n      \"https://cdn.jsdelivr.net/gh/luangtatipsy/intel-image-classification-web-app/public/models/intel_img_clf_best_weight.js/model.json\";\n    this.targets = [\n      \"buildings\",\n      \"forest\",\n      \"glacier\",\n      \"mountain\",\n      \"sea\",\n      \"street\",\n    ];\n\n    this.handleImageClick = this.handleImageClick.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.handlePredictionClick = this.handlePredictionClick.bind(this);\n  }\n\n  handleImageClick(id) {\n    let currentImage;\n    const updatedImages = this.state.images.map((image) => {\n      if (image.id === id) {\n        currentImage = image.src;\n        return {\n          ...image,\n          selected: true,\n        };\n      }\n      return {\n        ...image,\n        selected: false,\n      };\n    });\n\n    return this.setState({\n      currentImage: currentImage,\n      images: updatedImages,\n    });\n  }\n\n  handleRefresh() {\n    const images = createImagesArray();\n    this.setState((prevState) => {\n      return {\n        images: images,\n        currentImage: prevState.currentImage,\n        result: prevState.result,\n        onLoading: prevState.onLoading,\n      };\n    });\n  }\n\n  readImage(inputImage) {\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n\n    context.drawImage(inputImage, 0, 0);\n\n    return context.getImageData(0, 0, inputImage.width, inputImage.height);\n  }\n\n  async handlePredictionClick() {\n    this.setState((prevState) => {\n      return {\n        images: prevState.images,\n        currentImage: prevState.currentImage,\n        result: prevState.result,\n        onLoading: true,\n      };\n    });\n\n    const model = await tf.loadLayersModel(this.modelUrl);\n    const inputImage = document.getElementById(\"input-image\");\n    const imageData = this.readImage(inputImage);\n    const imageTensor = tf.browser\n      .fromPixels(imageData)\n      .toFloat()\n      .div(tf.scalar(127.5))\n      .sub(tf.scalar(1.0))\n      .expandDims(0);\n    const prediction = model.predict(imageTensor);\n    const maxIdx = prediction.argMax(-1).dataSync()[0];\n    const probabilities = prediction.data();\n    const result = await probabilities.then((probabilities) => {\n      return {\n        prediction: this.targets[maxIdx],\n        confidence: Math.max(...probabilities).toFixed(3),\n      };\n    });\n\n    this.setState((prevState) => {\n      return {\n        images: prevState.images,\n        currentImage: prevState.currentImage,\n        result: result,\n        onLoading: false,\n      };\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Container>\n          <Typography className={classes.title} variant=\"h4\" align=\"center\">\n            live demo\n          </Typography>\n          <hr className={classes.divider} />\n          <Grid container direction=\"row\">\n            <Grid\n              container\n              item\n              xs={12}\n              sm={7}\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={8}>\n                <Typography\n                  className={classes.subtitle}\n                  variant=\"h5\"\n                  align=\"left\"\n                >\n                  Choose an Image\n                </Typography>\n              </Grid>\n              <Grid item xs={2} align=\"right\">\n                <IconButton\n                  onClick={this.handleRefresh}\n                  disabled={this.state.onLoading}\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid container direction=\"row\" alignItems=\"flex-start\">\n            <Grid className={classes.gallery} item xs={12} sm={7}>\n              <img\n                id=\"input-image\"\n                className={classes.inputImage}\n                src={this.state.currentImage}\n                alt=\"sample being predicted\"\n              />\n              <Gallery\n                images={this.state.images}\n                handleClick={this.handleImageClick}\n              />\n            </Grid>\n            <Grid className={classes.prediction} item xs={12} sm={5}>\n              <Button\n                className={classes.predictButton}\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                disabled={\n                  this.state.currentImage === null || this.state.onLoading\n                }\n                onClick={this.handlePredictionClick}\n              >\n                predict\n              </Button>\n              <PredictionBox\n                result={this.state.result}\n                onLoading={this.state.onLoading}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Demo);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  },\n  container: {\n    gridGap: theme.spacing(1),\n  },\n  socialButton: {\n    borderWidth: 2,\n    borderStyle: \"solid\",\n    borderColor: theme.palette.primary.contrastText,\n    color: theme.palette.primary.contrastText,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  copyright: {\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        className={classes.container}\n        container\n        direction=\"row\"\n        justify=\"space-around\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} sm={4} align=\"center\">\n          <Typography\n            className={classes.copyright}\n            variant=\"button\"\n            component={\"span\"}\n          >\n            Made by{\" \"}\n            <span>\n              <Link\n                color=\"secondary\"\n                href=\"https://luangtatipsy.github.io\"\n                target=\"_blank\"\n              >\n                luangtatipsy\n              </Link>\n            </span>{\" \"}\n            © {currentYear}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={4} align=\"center\">\n          <IconButton\n            className={classes.socialButton}\n            component=\"span\"\n            aria-label=\"github.com/luangtatipsy\"\n            onClick={() => {\n              window.open(\"https://github.com/luangtatipsy\");\n            }}\n          >\n            <GitHubIcon />\n          </IconButton>\n          <IconButton\n            className={classes.socialButton}\n            component=\"span\"\n            aria-label=\"facebook.com/luangtatipsyy\"\n            onClick={() => {\n              window.open(\"https://facebook.com/luangtatipsyy\");\n            }}\n          >\n            <FacebookIcon />\n          </IconButton>\n          <IconButton\n            className={classes.socialButton}\n            component=\"span\"\n            aria-label=\"instagram.com/luangtatipsyy\"\n            onClick={() => {\n              window.open(\"https://instagram.com/luangtatipsyy\");\n            }}\n          >\n            <InstagramIcon />\n          </IconButton>\n          <IconButton\n            className={classes.socialButton}\n            component=\"span\"\n            aria-label=\"linkedin.com/in/taechawatk/\"\n            onClick={() => {\n              window.open(\"https://linkedin.com/in/taechawatk/\");\n            }}\n          >\n            <LinkedInIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import {\n  Container,\n  Grid,\n  Typography,\n  Fade,\n  Grow,\n  Hidden,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(10),\n    paddingBottom: theme.spacing(10),\n    backgroundColor: theme.palette.primary.light,\n  },\n  heroSvg: {\n    height: \"55vh\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  tagline: {\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    color: theme.palette.primary.contrastText,\n    marginBottom: theme.spacing(2),\n  },\n  subHeading: {\n    color: theme.palette.primary.contrastText,\n  },\n  tryButton: {\n    float: \"right\",\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n}));\n\nconst heroSvg = process.env.PUBLIC_URL + \"/hero-image.svg\";\n\nexport default function Hero() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"lg\">\n        <Grid container alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12} lg={6}>\n            <Hidden only=\"xs\">\n              <Fade in timeout={2000} disableStrictModeCompat={true}>\n                <img className={classes.heroSvg} alt=\"hero\" src={heroSvg} />\n              </Fade>\n            </Hidden>\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <Grow in timeout={3000} disableStrictModeCompat={true}>\n              <Typography\n                className={classes.tagline}\n                variant=\"h4\"\n                align=\"right\"\n              >\n                making computer seeing like human vision\n              </Typography>\n            </Grow>\n            <Grow in timeout={4000} disableStrictModeCompat={true}>\n              <Typography\n                className={classes.subHeading}\n                variant=\"subtitle1\"\n                align=\"right\"\n              >\n                This pre-trained model classifies a scene image at a time into\n                the following categories: buildings, forest, glacier, mountain,\n                sea, street.\n              </Typography>\n            </Grow>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/MuiTheme\";\nimport Navigator from \"./components/Navbar\";\nimport Demo from \"./DemoSection\";\nimport Footer from \"./components/Footer\";\nimport Hero from \"./components/Hero\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <MuiThemeProvider theme={theme}>\n        <Navigator />\n        <Hero />\n        <Demo />\n        <Footer />\n      </MuiThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}